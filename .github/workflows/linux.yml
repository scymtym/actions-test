name: linux

on: [push]

jobs:
  sbcl_master:
    runs-on: ubuntu-latest
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount zlib1g-dev time make sbcl gcc git



      - name: git.repository
        run: |
          git clone -b master https://git.code.sf.net/p/sbcl/sbcl .


      - name: freestyle.shell
        run: |

          sh make.sh \
            --xc-host="sbcl --no-sysinit --no-userinit" \
            --fancy \



          # later ( cd tests && sh run-tests.sh )

          INSTALL_ROOT="$(pwd)/install" sh install.sh
          tar -czf sbcl.tar.gz install/


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv sbcl.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: sbcl@master
          path: artifacts

  quicklisp_current:
    runs-on: ubuntu-latest
    needs: [sbcl_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount curl



      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: freestyle.shell
        run: |
          if ! [ -f "${WORKSPACE}/install//share/common-lisp/quicklisp/setup.lisp" ] ; then
            # Download Quicklisp installer
            curl -O https://beta.quicklisp.org/quicklisp.lisp

            # Execute installation
            SBCL_HOME=${WORKSPACE}/upstream/install/bin/../lib/sbcl ${WORKSPACE}/upstream/install/bin/sbcl \
            --core ${WORKSPACE}/upstream/install/bin/../lib/sbcl/sbcl.core                 \
            --noinform --no-userinit --disable-debugger                                    \
              --load quicklisp.lisp                            \
              --eval '(quicklisp-quickstart:install

                       :path "'"${WORKSPACE}/install//share/common-lisp/quicklisp"'/")' \
              --quit
          else
            (
              flock 9
              SBCL_HOME=${WORKSPACE}/upstream/install/bin/../lib/sbcl ${WORKSPACE}/upstream/install/bin/sbcl \
            --core ${WORKSPACE}/upstream/install/bin/../lib/sbcl/sbcl.core                 \
            --noinform --no-userinit --disable-debugger                              \
                --load "${WORKSPACE}/install//share/common-lisp/quicklisp/setup.lisp"                     \
                --eval '(ql:update-client :prompt nil)'    \
                --eval '(ql:update-all-dists :prompt nil)' \
                --quit
            ) 9> "${WORKSPACE}/install//share/common-lisp/quicklisp/lock"

          fi

          # Fixup permissions
          chmod -R g+rwX "${WORKSPACE}/install//share/common-lisp/quicklisp"


          tar -czf quicklisp-current.tar.gz install


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv quicklisp-current.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: quicklisp@current
          path: artifacts

  cl-launch_master:
    runs-on: ubuntu-latest
    needs: [quicklisp_current,sbcl_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar make



      - name: git.repository
        run: |
          git clone -b master https://gitlab.common-lisp.net/xcvb/cl-launch.git .


      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: freestyle.shell
        run: |
          mkdir -p "${WORKSPACE}/install/"/etc
          mkdir -p "${WORKSPACE}/install/"/bin

          ./cl-launch.sh                      \
            --include "${WORKSPACE}/install//share/common-lisp/source/cl-launch/" \
            --rc                              \
            --quicklisp                       \
            --output "${WORKSPACE}/install//bin/cl-launch" \
            -B install                        \
            > /dev/null

          sed -i -e 's#try_resource_file /etc/cl-launchrc#try_resource_file "${WORKSPACE}/upstream/install"/etc/cl-launchrc#;s#try_resource_file "\$HOME/\.cl-launchrc"##;s#(try (subpathname (user-homedir-pathname) "quicklisp/setup.lisp"))#(try (merge-pathnames "../share/common-lisp/quicklisp/setup.lisp" (load-time-value *load-pathname*)))\
          (try (subpathname (user-homedir-pathname) "quicklisp/setup.lisp"))#;' "${WORKSPACE}/install//bin/cl-launch"

          cp dispatch.lisp "${WORKSPACE}/install//share/common-lisp/source/cl-launch//"
          chmod 644 "${WORKSPACE}/install//share/common-lisp/source/cl-launch//dispatch.lisp"

          cat  > "${WORKSPACE}/install//etc/cl-launchrc" <<"EOF"
          export SBCL_HOME=${WORKSPACE}/upstream/install/lib/sbcl/

          SBCL=${SBCL:-"${WORKSPACE}/upstream/install/bin/sbcl"}
          SBCL_OPTIONS=${SBCL_OPTIONS:-"--noinform --no-userinit"}

          LISPS=sbcl

          SOURCE_REGISTRY=${SOURCE_REGISTRY:-"${WORKSPACE}/upstream/install/share/common-lisp/source//"}


          EOF


          tar -czf cl-launch-master.tar.gz install


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-launch-master.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-launch@master
          path: artifacts

  cl-architecture_service-provider_master:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b master https://github.com/scymtym/architecture.service-provider.git .


      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s architecture.service-provider/test -s architecture.service-provider-and-hooks/test                                        \
            '(mapc (function asdf:test-system) (list :architecture.service-provider/test :architecture.service-provider-and-hooks/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#cl-architecture.service-provider-master\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "cl-architecture.service-provider-master.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-architecture.service-provider-master.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-architecture.service-provider@master
          path: artifacts

  cl-architecture_builder-protocol_master:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b master https://github.com/scymtym/architecture.builder-protocol.git .


      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s architecture.builder-protocol/test -s architecture.builder-protocol.json/test -s architecture.builder-protocol.universal-builder/test -s architecture.builder-protocol.xpath/test                                        \
            '(mapc (function asdf:test-system) (list :architecture.builder-protocol/test :architecture.builder-protocol.json/test :architecture.builder-protocol.universal-builder/test :architecture.builder-protocol.xpath/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#cl-architecture.builder-protocol-master\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "cl-architecture.builder-protocol-master.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-architecture.builder-protocol-master.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: artifacts

  cl-model_transform_trace_future:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b future https://github.com/scymtym/model.transform.trace.git .


      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s model.transform.trace/test                                        \
            '(mapc (function asdf:test-system) (list :model.transform.trace/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#cl-model.transform.trace-future\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "cl-model.transform.trace-future.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-model.transform.trace-future.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-model.transform.trace@future
          path: artifacts

  cl-text_source-location_future:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current,cl-architecture_service-provider_master,cl-architecture_builder-protocol_master,cl-model_transform_trace_future]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b future https://github.com/scymtym/text.source-location.git .


      - name: download-from-cl-model.transform.trace@future
        uses: actions/download-artifact@v1
        with:
          name: cl-model.transform.trace@future
          path: upstream-dir
      - name: download-from-cl-architecture.builder-protocol@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: upstream-dir
      - name: download-from-cl-architecture.service-provider@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.service-provider@master
          path: upstream-dir
      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s text.source-location/test -s text.source-location.lookup/test -s text.source-location.print/test -s text.source-location.source-tracking-builder/test                                        \
            '(mapc (function asdf:test-system) (list :text.source-location/test :text.source-location.lookup/test :text.source-location.print/test :text.source-location.source-tracking-builder/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#cl-text.source-location-future\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "cl-text.source-location-future.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-text.source-location-future.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-text.source-location@future
          path: artifacts

  cl-configuration_options_master:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current,cl-architecture_service-provider_master,cl-parser_ini_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b master https://github.com/scymtym/configuration.options.git .


      - name: download-from-cl-architecture.builder-protocol@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: upstream-dir
      - name: download-from-cl-parser.ini@master
        uses: actions/download-artifact@v1
        with:
          name: cl-parser.ini@master
          path: upstream-dir
      - name: download-from-cl-architecture.service-provider@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.service-provider@master
          path: upstream-dir
      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s configuration.options/test -s configuration.options-syntax-xml/test -s configuration.options-syntax-ini/test -s configuration.options-source-commandline/test -s configuration.options-and-quri/test -s configuration.options-and-puri/test -s configuration.options-and-mop/test -s configuration.options-and-service-provider/test                                        \
            '(mapc (function asdf:test-system) (list :configuration.options/test :configuration.options-syntax-xml/test :configuration.options-syntax-ini/test :configuration.options-source-commandline/test :configuration.options-and-quri/test :configuration.options-and-puri/test :configuration.options-and-mop/test :configuration.options-and-service-provider/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#cl-configuration.options-master\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "cl-configuration.options-master.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-configuration.options-master.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-configuration.options@master
          path: artifacts

  cl-parser_ini_master:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current,cl-architecture_builder-protocol_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b master https://github.com/scymtym/parser.ini.git .


      - name: download-from-cl-architecture.builder-protocol@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: upstream-dir
      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s parser.ini/test                                        \
            '(mapc (function asdf:test-system) (list :parser.ini/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#cl-parser.ini-master\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "cl-parser.ini-master.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-parser.ini-master.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-parser.ini@master
          path: artifacts

  cl-language_yaml_future:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current,cl-architecture_builder-protocol_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b future https://github.com/scymtym/language.yaml.git .


      - name: download-from-cl-architecture.builder-protocol@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: upstream-dir
      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s language.yaml.base/test -s language.yaml.construct/test -s language.yaml.tags/test -s language.yaml/test -s language.yaml.parser/test                                        \
            '(mapc (function asdf:test-system) (list :language.yaml.base/test :language.yaml.construct/test :language.yaml.tags/test :language.yaml/test :language.yaml.parser/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#cl-language.yaml-future\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "cl-language.yaml-future.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv cl-language.yaml-future.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: cl-language.yaml@future
          path: artifacts

  rosetta-cl_master:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current,cl-architecture_service-provider_master,cl-architecture_builder-protocol_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b master https://code.cor-lab.de/git/rosetta.git.cl .


      - name: download-from-cl-architecture.builder-protocol@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: upstream-dir
      - name: download-from-cl-architecture.service-provider@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.service-provider@master
          path: upstream-dir
      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s rosetta/test                                        \
            '(mapc (function asdf:test-system) (list :rosetta/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#rosetta-cl-master\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "rosetta-cl-master.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv rosetta-cl-master.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: rosetta-cl@master
          path: artifacts

  rosetta-project-cl_master:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current,cl-architecture_builder-protocol_master,rosetta-cl_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount git tar



      - name: git.repository
        run: |
          git clone -b master https://code.cor-lab.de/git/rosetta.git.project-cl .


      - name: download-from-cl-architecture.service-provider@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.service-provider@master
          path: upstream-dir
      - name: download-from-rosetta-cl@master
        uses: actions/download-artifact@v1
        with:
          name: rosetta-cl@master
          path: upstream-dir
      - name: download-from-cl-architecture.builder-protocol@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: upstream-dir
      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-source.shell
        run: |
          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="  ${SBCL_OPTIONS}"' \
            -S "(:source-registry                                              \
                   (:tree \""$(pwd)"\")                                       \
                   (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\")      \
                   :ignore-inherited-configuration)"                           \
            -s rosetta-project/test                                        \
            '(mapc (function asdf:test-system) (list :rosetta-project/test ))'



      - name: common-lisp-source.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar \
            --transform 's#^\.\(.*\)#rosetta-project-cl-master\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "rosetta-project-cl-master.tar.gz"


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv rosetta-project-cl-master.tar.gz artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: rosetta-project-cl@master
          path: artifacts

  build-generator_master:
    runs-on: ubuntu-latest
    needs: [cl-launch_master,quicklisp_current,cl-configuration_options_master,cl-language_yaml_future,cl-text_source-location_future,rosetta-cl_master,rosetta-project-cl_master]
    steps:
      - name: install-platform-dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update \
              && DEBIAN_FRONTEND=noninteractive sudo apt-get -qq --assume-yes install \
                sloccount tar git file unzip unp libssl1.0.0



      - name: git.repository
        run: |
          git clone -b master https://code.cor-lab.de/git/build-generator .


      - name: download-from-rosetta-project-cl@master
        uses: actions/download-artifact@v1
        with:
          name: rosetta-project-cl@master
          path: upstream-dir
      - name: download-from-rosetta-cl@master
        uses: actions/download-artifact@v1
        with:
          name: rosetta-cl@master
          path: upstream-dir
      - name: download-from-cl-model.transform.trace@future
        uses: actions/download-artifact@v1
        with:
          name: cl-model.transform.trace@future
          path: upstream-dir
      - name: download-from-cl-text.source-location@future
        uses: actions/download-artifact@v1
        with:
          name: cl-text.source-location@future
          path: upstream-dir
      - name: download-from-cl-language.yaml@future
        uses: actions/download-artifact@v1
        with:
          name: cl-language.yaml@future
          path: upstream-dir
      - name: download-from-cl-architecture.builder-protocol@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.builder-protocol@master
          path: upstream-dir
      - name: download-from-cl-parser.ini@master
        uses: actions/download-artifact@v1
        with:
          name: cl-parser.ini@master
          path: upstream-dir
      - name: download-from-cl-architecture.service-provider@master
        uses: actions/download-artifact@v1
        with:
          name: cl-architecture.service-provider@master
          path: upstream-dir
      - name: download-from-cl-configuration.options@master
        uses: actions/download-artifact@v1
        with:
          name: cl-configuration.options@master
          path: upstream-dir
      - name: download-from-sbcl@master
        uses: actions/download-artifact@v1
        with:
          name: sbcl@master
          path: upstream-dir
      - name: download-from-quicklisp@current
        uses: actions/download-artifact@v1
        with:
          name: quicklisp@current
          path: upstream-dir
      - name: download-from-cl-launch@master
        uses: actions/download-artifact@v1
        with:
          name: cl-launch@master
          path: upstream-dir
      - name: extract-upstream-artiacts
        run: |
          cd upstream
          find . -name '*.tar.gz' -exec tar -xzf '{}' \;

      - name: common-lisp-executable.shell
        run: |
          # Get precise version from git and write into version-string.sexp
          tag='release-*'
          git describe --long --dirty=-dirty --tags --match "${tag}"                              \
            | sed -re 's/release-([0-9])+\.([0-9]+)-([0-9]+)-(.*)/echo "\\"\1.$((\2 + 1)).\3\\""/' \
            | sh                                                                                   \
            > version-string.sexp

          # Set up environment
          export "ASDF_OUTPUT_TRANSLATIONS=/:${WORKSPACE}/fasl-cache/"


          # Build binary
          ${WORKSPACE}/upstream/install/bin/cl-launch                                        \
            --wrap 'SBCL_OPTIONS="--dynamic-space-size 4Gb ${SBCL_OPTIONS}"' \
            -S "(:source-registry \
            (:tree \""$(pwd)"\")                                  \
            (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\") \
            :ignore-inherited-configuration)
          "                                            \
            -s build-generator.commandline-interface                                        \
            -e "asdf::(defmethod perform ((o image-op) (c system)) (dump-image (output-file o c) :executable  (typep o (quote program-op)) :compression 9))" \
                                                    \
            --dump ! --output "install/bin/build-generator"                            \
               -r "build-generator.commandline-interface:main"                                     \


          # Smoke test binary
          BUILD_GENERATOR_CONFIG_FILES=%pwd ${WORKSPACE}/install//bin/build-generator version --changelog=1


          # Execute tests
          ${WORKSPACE}/upstream/install/bin/cl-launch                             \
            -S "(:source-registry \
            (:tree \""$(pwd)"\")                                  \
            (:tree \"${WORKSPACE}/upstream/share/common-lisp/source\") \
            :ignore-inherited-configuration)
          "                                 \
            -s build-generator/test                        \
            '(mapc (function asdf:test-system) (list :build-generator/test ))'




      - name: common-lisp-executable.archive-source-code
        run: |
          # Package source code
          temp=$(mktemp -u).tar.gz
          tar                                                                       \
            --transform 's#^\.\(.*\)#build-generator-master\1#'            \
            --exclude sloccount.sc --exclude fasl-cache --exclude upstream --exclude install --exclude .git --exclude .svn  \
            -czf "${temp}"                                                         \
            .
          mv "${temp}" "build-generator-master.tar.gz"


          # Package installed artifacts
          tar -czf build-generator-master-install.tar.gz install


      - name: gather-artifacts
        run: |
          mkdir -p artifacts
          mv build-generator-master.tar.gz, build-generator-master-install.tar.gz, install/bin/build-generator artifacts/

      - name: upload-artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-generator@master
          path: artifacts

  